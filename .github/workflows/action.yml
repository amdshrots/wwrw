name: macOS RDP via playit.gg

on:
  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  APP_PORT: 8080

jobs:
  rdp:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4                                         # ensure code is present :contentReference[oaicite:4]{index=4}

      - name: Clone playit-agent source
        run: |
          git clone https://github.com/playit-cloud/playit-agent.git      # pull the agent code :contentReference[oaicite:5]{index=5}

      - name: Build the CLI (“agent”) binary
        working-directory: playit-agent/packages/agent_cli               # build the CLI package specifically :contentReference[oaicite:6]{index=6}
        run: |
          brew install rust                                             # install Rust toolchain :contentReference[oaicite:7]{index=7}
          cargo build --release                                         # produces target/release/agent :contentReference[oaicite:8]{index=8}

      - name: Install playit CLI
        run: |
          mv playit-agent/packages/agent_cli/target/release/agent ./playit  # rename for simplicity
          chmod +x ./playit

      - name: Enable VNC (Screen Sharing)
        run: |
          sudo systemsetup -setremotelogin on
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart \
            -activate \
            -configure -access -on \
            -privs -all \
            -restart -agent \
            -menu

      - name: Run setup.sh (with explicit cd)
        run: |
          cd "$GITHUB_WORKSPACE"                                        # recover from any getcwd errors :contentReference[oaicite:9]{index=9}
          chmod +x setup.sh
          ./setup.sh "$VNC_PASS" "$VNC_PASS"

      - name: Authenticate playit agent
        run: |
          cd "$GITHUB_WORKSPACE"
          nohup ./playit setup &                                        # “setup” is only valid on the Debian/apt package; our binary uses “secret-path” instead :contentReference[oaicite:10]{index=10}
          sleep 10

      - name: Create TCP tunnel
        run: |
          cd "$GITHUB_WORKSPACE"
          nohup ./playit tunnels create tcp --port $APP_PORT &          # new subcommand is “tunnels create tcp” :contentReference[oaicite:11]{index=11}
          sleep 5
          ./playit tunnels list                                          # list your tunnel

      - name: Keep session alive
        run: sleep 3600
